import {
  arrayUnion,
  doc,
  onSnapshot,
  Timestamp,
  updateDoc,
} from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { toast } from "react-toastify";
import Message from "../../components/Message";
import { auth, db } from "../../utils/firebase";

export default function Details() {
  const route = useRouter();
  const routeData = route.query;
  const [message, setMessage] = useState("");
  const [allMessages, setAllMessages] = useState([]);
  // const [user, loading] = useAuthState(auth);

  // Submit a message
  const submitMessage = async () => {
    // Check if the user is logged
    if (!auth.currentUser) return route.push("/auth/login");

    if (!message) {
      toast.error("Don't leave an empty message.!", {
        position: toast.POSITION.TOP_CENTER,
        autoClose: 1500,
      });
      return;
    }
    const docRef = doc(db, "posts", routeData.id);
    await updateDoc(docRef, {
      comments: arrayUnion({
        message,
        avatar: auth.currentUser.photoURL,
        userName: auth.currentUser.displayName,
        time: Timestamp.now(),
      }),
    });

    setMessage("");
  };

  // Get Comments
  const getComments = async () => {
    const docRef = doc(db, "posts", routeData.id);
    const unsubscribe = onSnapshot(docRef, (snapshot) => {
      setAllMessages(snapshot.data().comments);
    });
    return unsubscribe;
  };

  useEffect(() => {
    if (!route.isReady) return;
    getComments();
  }, [route.isReady]);

  return (
    <div>
      <Head>
        <title>Make a comment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="w-full min-h-screen md:max-w-2xl md:mx-auto container mx-auto mt-10">
        <Message {...routeData}></Message>

        <div className="my-4">
          <div className="flex rounded overflow-hidden">
            <input
              type="text"
              value={message}
              placeholder="Send a message"
              onChange={(e) => setMessage(e.target.value)}
              className="bg-gray-800 w-full h-[3rem] p-2 text-white text-sm"
            />
            <button
              onClick={submitMessage}
              className="bg-cyan-500 text-white py-2 px-4 text-sm"
            >
              Submit
            </button>
          </div>

          <div className="py-6">
            <h2 className="font-bold">Comments</h2>

            <div className="">
              {allMessages?.map((message) => (
                <div
                  className="bg-white p-4 my-4 border-2 rounded-md"
                  key={message.time}
                >
                  <div className="flex items-center gap-2 mb-4">
                    <img
                      className="w-8 h-8 rounded-full overflow-hidden"
                      src={message.avatar}
                      alt={message.userName}
                    />
                    <h2 className="text-sm font-bold">{message.userName}</h2>
                  </div>
                  <h2>{message.message}</h2>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
